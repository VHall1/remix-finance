// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ISO 4217
enum Currency {
  CAD
  EUR
  GBP
  USD
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  firstName       String
  lastName        String
  avatar          String?
  passwordHash    String
  defaultCurrency Currency  @default(GBP)
  accounts        Account[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Account {
  id           String        @id @default(cuid())
  name         String
  // Could do BigInt to get 64 bits, but feel like 32 bits are more than enough here
  // Should cover us up-to about 21 million in balance
  // 32-bit integer in minor units of the currency
  balance      Int
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum TransactionDirection {
  INBOUND
  OUTBOUND
}

model Transaction {
  id        String               @id @default(cuid())
  amount    Int
  reference String?
  direction TransactionDirection
  currency  Currency
  account   Account              @relation(fields: [accountId], references: [id])
  accountId String
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
}
